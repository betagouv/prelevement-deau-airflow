"""empty message

Revision ID: 944b3db2e00d
Revises: 680800074590
Create Date: 2024-07-15 09:51:15.977059

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "944b3db2e00d"
down_revision: Union[str, None] = "680800074590"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "demarche_data_brute_last_snapshot",
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "hashed_collected_data",
            sa.String(),
            nullable=True,
            comment="Le hash du fichier de snapshot.",
        ),
        sa.Column(
            "object_storage_key",
            sa.String(),
            nullable=True,
            comment="La cle du fichier de snapshot dans le bucket.",
        ),
        sa.Column("demarche_number", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("hashed_collected_data"),
        sa.UniqueConstraint("object_storage_key"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_demarche_data_brute_last_snapshot_id"
        ),
        "demarche_data_brute_last_snapshot",
        ["id"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_demarche_data_brute_last_snapshot_date_created"
        ),
        "demarche_data_brute_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "piece_jointe_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "checksum", sa.String(), nullable=True, comment="Checksum du fichier."
        ),
        sa.Column(
            "type_fichier",
            sa.String(),
            nullable=True,
            comment="Le type MIME du fichier.",
        ),
        sa.Column(
            "nom_fichier", sa.String(), nullable=True, comment="Le nom du fichier."
        ),
        sa.Column(
            "demarches_simplifiees_url",
            sa.String(),
            nullable=True,
            comment="l'URL sur demarches simplifiees",
        ),
        sa.Column(
            "object_storage_key",
            sa.String(),
            nullable=True,
            comment="La cle du fichier dans le bucket.",
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_piece_jointe_last_snapshot_date_created"
        ),
        "piece_jointe_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "avis_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "id_avis",
            sa.String(),
            nullable=True,
            comment="Identifiant unique de l'avis",
        ),
        sa.Column(
            "question", sa.String(), nullable=True, comment="Question de l’instructeur"
        ),
        sa.Column("reponse", sa.String(), nullable=True, comment="Réponse de l’expert"),
        sa.Column(
            "date_question", sa.DateTime(), nullable=True, comment="Date de la question"
        ),
        sa.Column(
            "date_reponse", sa.DateTime(), nullable=True, comment="Date de la reponse"
        ),
        sa.Column(
            "claimant_email", sa.String(), nullable=True, comment="Email du claimant"
        ),
        sa.Column(
            "expert_email", sa.String(), nullable=True, comment="Email de l'expert"
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f("ix_demarches_simplifiees_last_snapshot_avis_last_snapshot_id_dossier"),
        "avis_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f("ix_demarches_simplifiees_last_snapshot_avis_last_snapshot_date_created"),
        "avis_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "citerne_releve_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "date_releve", sa.DateTime(), nullable=True, comment="Date du relevé"
        ),
        sa.Column(
            "point_prelevement",
            sa.String(),
            nullable=True,
            comment="Point de prélèvement",
        ),
        sa.Column("volume", sa.Float(), nullable=True, comment="Volume prélevé"),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_citerne_releve_last_snapshot_id_dossier"
        ),
        "citerne_releve_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_citerne_releve_last_snapshot_date_created"
        ),
        "citerne_releve_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "donnees_point_de_prelevement_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "ligne",
            sa.Integer(),
            nullable=True,
            comment="Ordre dans lequel l’index a été déclaré pour une même déclaration",
        ),
        sa.Column(
            "nom_point_prelevement",
            sa.String(),
            nullable=True,
            comment="Nom du point de prélèvement",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_donnees_point_de_prelevement_last_snapshot_date_created"
        ),
        "donnees_point_de_prelevement_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_donnees_point_de_prelevement_last_snapshot_id_dossier"
        ),
        "donnees_point_de_prelevement_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "dossier_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "adresse_email_connexion",
            sa.String(),
            nullable=True,
            comment="Email de connexion associé au compte Démarches simplifiées du déclarant",
        ),
        sa.Column(
            "civilite_declarant",
            sa.String(),
            nullable=True,
            comment="Civilité du déclarant",
        ),
        sa.Column(
            "nom_declarant", sa.String(), nullable=True, comment="Nom du déclarant"
        ),
        sa.Column(
            "prenom_declarant",
            sa.String(),
            nullable=True,
            comment="Prénom du déclarant",
        ),
        sa.Column(
            "depot_pour_mandataire",
            sa.Boolean(),
            nullable=True,
            comment="Indique si le déclarant dépose pour un mantataire",
        ),
        sa.Column(
            "nom_mandataire", sa.String(), nullable=True, comment="Nom du mandataire"
        ),
        sa.Column(
            "prenom_mandataire",
            sa.String(),
            nullable=True,
            comment="Prénom du mandataire",
        ),
        sa.Column(
            "archive",
            sa.Boolean(),
            nullable=True,
            comment="Indique si le dossier est archivé",
        ),
        sa.Column(
            "etat_dossier",
            sa.String(),
            nullable=True,
            comment="Etat d’avancement du dossier",
        ),
        sa.Column(
            "derniere_mise_a_jour",
            sa.DateTime(),
            nullable=True,
            comment="Date de dernière mise à jour du dossier (notamment les avis, la messagerie…)",
        ),
        sa.Column(
            "date_depot",
            sa.DateTime(),
            nullable=True,
            comment="Date de dépôt du dossier",
        ),
        sa.Column(
            "date_passage_instruction",
            sa.DateTime(),
            nullable=True,
            comment="Date de passage en instruction",
        ),
        sa.Column(
            "date_traitement",
            sa.DateTime(),
            nullable=True,
            comment="Date de traitement par l’instructeur",
        ),
        sa.Column(
            "motivation_decision",
            sa.String(),
            nullable=True,
            comment="Motivation de la décision par l’instructeur",
        ),
        sa.Column(
            "instructeurs",
            sa.String(),
            nullable=True,
            comment="Instructeurs affectés à la démarche",
        ),
        sa.Column(
            "groupe_instructeur",
            sa.String(),
            nullable=True,
            comment="Groupe d’instructeurs affecté à la démarche",
        ),
        sa.Column("coordonnees", sa.String(), nullable=True),
        sa.Column(
            "adresse_email_declarant",
            sa.String(),
            nullable=True,
            comment="Adresse email du déclarant",
        ),
        sa.Column(
            "numero_telephone_declarant",
            sa.String(),
            nullable=True,
            comment="Numéro de téléphone du déclarant",
        ),
        sa.Column(
            "statut_declarant",
            sa.String(),
            nullable=True,
            comment="Statut du déclarant (particulier ou représentant d’une structure)",
        ),
        sa.Column(
            "raison_sociale_structure",
            sa.String(),
            nullable=True,
            comment="Raison sociale de la structure",
        ),
        sa.Column(
            "type_prelevement",
            sa.String(),
            nullable=True,
            comment="Type de prélèvement",
        ),
        sa.Column("point_prelevement_eau", sa.String(), nullable=True),
        sa.Column(
            "numero_arrete_aot",
            sa.String(),
            nullable=True,
            comment="Numéro de l’arrêté préfectoral d’AOT",
        ),
        sa.Column("prelevement_citerne", sa.String(), nullable=True),
        sa.Column("volume_preleve", sa.String(), nullable=True),
        sa.Column(
            "mode_transmission_donnees_camion_citerne",
            sa.String(),
            nullable=True,
            comment="Mode de transmission des données pour les AOT camion citerne (une à une, ou au format tableur)",
        ),
        sa.Column("volumes_pompes_jour", sa.String(), nullable=True),
        sa.Column("copie_registre_papier", sa.String(), nullable=True),
        sa.Column("conclusion", sa.String(), nullable=True),
        sa.Column(
            "commentaire",
            sa.String(),
            nullable=True,
            comment="Commentaire libre du déclarant sur la déclaration",
        ),
        sa.Column("volumes_annuels_pompes", sa.String(), nullable=True),
        sa.Column(
            "transmission_extrait_numerique_registre", sa.String(), nullable=True
        ),
        sa.Column("declaration_point_prelevement", sa.String(), nullable=True),
        sa.Column("date_activation_point_prelevement", sa.String(), nullable=True),
        sa.Column("type_autre_prelevement", sa.String(), nullable=True),
        sa.Column("releve_index_compteur", sa.String(), nullable=True),
        sa.Column("informations_compteur", sa.String(), nullable=True),
        sa.Column(
            "numero_serie_compteur",
            sa.String(),
            nullable=True,
            comment="Numéro de série du compteur (pour les AOT agricoles)",
        ),
        sa.Column("prelevement_icpe", sa.String(), nullable=True),
        sa.Column("donnees_standardisees", sa.String(), nullable=True),
        sa.Column("prelevement_aep_zre", sa.String(), nullable=True),
        sa.Column("nom_point_prelevement", sa.String(), nullable=True),
        sa.Column(
            "validation_informations",
            sa.Boolean(),
            nullable=True,
            comment="Déclaration par le préleveur que les informations sont exactes",
        ),
        sa.Column("details_prelevements_camion_citerne", sa.Boolean(), nullable=True),
        sa.Column(
            "donnees_compteur_volumetrique",
            sa.Boolean(),
            nullable=True,
            comment="Indique sur les données sont issues d’un compteur volumétrique (pour les AOT agricoles)",
        ),
        sa.Column(
            "compteur_lecture_directe",
            sa.Boolean(),
            nullable=True,
            comment="Indique s’il s’agit d’un compteur à lecture directe (pour les AOT agricoles)",
        ),
        sa.Column(
            "panne_compteur",
            sa.Boolean(),
            nullable=True,
            comment="Indique si une panne ou un changement de compteur est déclarée (pour les AOT agricoles)",
        ),
        sa.Column("prelevement_sur_periode_aot_agricole", sa.Boolean(), nullable=True),
        sa.Column(
            "prelevement_sur_periode_camion_citerne",
            sa.Boolean(),
            nullable=True,
            comment="Pour les AOT de camions citernes, indique si des prélèvements ont été réalisés sur la période concernée par la déclaration (mois précédent)",
        ),
        sa.Column(
            "date_debut_periode_declaree",
            sa.DateTime(),
            nullable=True,
            comment="Date du début de la période concernée par la déclaration",
        ),
        sa.Column(
            "date_fin_periode_declaree",
            sa.DateTime(),
            nullable=True,
            comment="Date de fin de la période concernée par la déclaration",
        ),
        sa.Column(
            "annee_prelevement_camion_citerne",
            sa.Integer(),
            nullable=True,
            comment="Pour les camions citernes, année de prélèvement (permet de définir le niveau de précision attendu dans la déclaration)",
        ),
        sa.Column(
            "prelevement_points_autorises_aot_2023",
            sa.Boolean(),
            nullable=True,
            comment="Avez-vous prélevé sur au moins un des points autorisés par votre AOT durant l'année 2023 ?",
        ),
        sa.Column(
            "rappel_obligation_mensuelle_declaration",
            sa.Boolean(),
            nullable=True,
            comment="Souhaiteriez-vous recevoir le 1er de chaque mois un mail vous rappelant l'obligation mensuelle de déclaration ?",
        ),
        sa.Column(
            "acceptation_contact_deal",
            sa.Boolean(),
            nullable=True,
            comment="Accepteriez-vous d’être recontacté.e par la DEAL pour échanger davantage sur le sujet ?",
        ),
        sa.Column(
            "mois_prelevement_camion_citerne",
            sa.String(),
            nullable=True,
            comment="En quel mois les prélèvements que vous allez déclarer ont-ils été réalisés ?",
        ),
        sa.Column(
            "note_facilite_utilisation",
            sa.String(),
            nullable=True,
            comment="Donnez une note sur la facilité de prise en main de l’outil démarches simplifiées",
        ),
        sa.Column(
            "remarque_note",
            sa.String(),
            nullable=True,
            comment="Souhaitez-vous apporter une remarque à cette note ?",
        ),
        sa.Column(
            "temps_remplissage_questionnaire",
            sa.String(),
            nullable=True,
            comment="Combien de temps avez-vous passé à remplir ce questionnaire ?",
        ),
        sa.Column(
            "amelioration_temps_remplissage",
            sa.String(),
            nullable=True,
            comment="Avez-vous une idée ce que qui pourrait être amélioré pour réduire ce temps ?",
        ),
        sa.Column(
            "temps_formatage_donnees",
            sa.String(),
            nullable=True,
            comment="Combien de temps avez-vous passé au formatage des données (utilisation du modèle de tableur imposé) ?",
        ),
        sa.Column(
            "televersement_tableur_brutes",
            sa.String(),
            nullable=True,
            comment="Qui est la personne qui a téléversé le tableur de données brutes dans l’outil Démarches Simplifiées ?",
        ),
        sa.Column(
            "acces_formulaire",
            sa.String(),
            nullable=True,
            comment="Comment cette personne a-t-elle eu accès au formulaire ?",
        ),
        sa.Column(
            "declarant_demarche_simplifiee",
            sa.String(),
            nullable=True,
            comment="Qui est la personne qui a fait la déclaration sur Démarches Simplifiées ?",
        ),
        sa.Column(
            "raison_non_declaration_preleveur",
            sa.String(),
            nullable=True,
            comment="Pour quelles raisons la personne en charge du prélèvement n'a-t-elle pas pu faire la déclaration elle-même ?",
        ),
        sa.Column(
            "demande_documentation",
            sa.String(),
            nullable=True,
            comment="Souhaiteriez-vous disposer d’une documentation sur le remplissage de ce formulaire et la façon de remplir le modèle de tableau de données ?",
        ),
        sa.Column(
            "amelioration_documentation",
            sa.String(),
            nullable=True,
            comment="Sous quelle forme une documentation d’utilisation vous semble la plus utile ?",
        ),
        sa.Column(
            "suggestion_informations_visualisation",
            sa.String(),
            nullable=True,
            comment="Si vous le souhaitez, vous pouvez nous faire part des informations que vous aimeriez voir figurer dans cet outil de visualisation de données, et qui pourraient vous être utiles pour mieux suivre vos prélèvements au fil du temps.",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_dossier_last_snapshot_date_created"
        ),
        "dossier_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f("ix_demarches_simplifiees_last_snapshot_dossier_last_snapshot_id_dossier"),
        "dossier_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "extrait_de_registre_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "ligne",
            sa.Integer(),
            nullable=True,
            comment="Ordre dans lequel l’index a été déclaré pour une même déclaration",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extrait_de_registre_last_snapshot_date_created"
        ),
        "extrait_de_registre_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extrait_de_registre_last_snapshot_id_dossier"
        ),
        "extrait_de_registre_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "message_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "id_message",
            sa.String(),
            nullable=True,
            comment="Identifiant unique du messge dans demarches simplifiees",
        ),
        sa.Column("email", sa.String(), nullable=True, comment="Email contacté"),
        sa.Column("body", sa.String(), nullable=True, comment="Corps du message"),
        sa.Column(
            "date_creation",
            sa.DateTime(),
            nullable=True,
            comment="Date de reception du message",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_message_last_snapshot_date_created"
        ),
        "message_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f("ix_demarches_simplifiees_last_snapshot_message_last_snapshot_id_dossier"),
        "message_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "prelevement_releve_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column("date", sa.DateTime(), nullable=True, comment="Date du relevé"),
        sa.Column("heure", sa.DateTime(), nullable=True, comment="Heure du relevé"),
        sa.Column("valeur", sa.Float(), nullable=True, comment="Valeur du relevé"),
        sa.Column(
            "nom_parametre", sa.String(), nullable=True, comment="Nom du paramètre"
        ),
        sa.Column("type", sa.String(), nullable=True, comment="Type de relevé"),
        sa.Column(
            "frequence", sa.String(), nullable=True, comment="Fréquence de relevé"
        ),
        sa.Column("unite", sa.String(), nullable=True, comment="Unité de relevé"),
        sa.Column(
            "detail_point_suivi",
            sa.String(),
            nullable=True,
            comment="Détail du point de suivi",
        ),
        sa.Column(
            "profondeur",
            sa.Float(),
            nullable=True,
            comment="Profondeur du point de suivi",
        ),
        sa.Column(
            "date_debut",
            sa.DateTime(),
            nullable=True,
            comment="Date de début de relevé",
        ),
        sa.Column(
            "date_fin", sa.DateTime(), nullable=True, comment="Date de fin de relevé"
        ),
        sa.Column(
            "remarque", sa.String(), nullable=True, comment="Remarque sur le relevé"
        ),
        sa.Column(
            "nom_point_prelevement",
            sa.String(),
            nullable=True,
            comment="Nom du point de prélèvement",
        ),
        sa.Column(
            "nom_point_de_prelevement_associe",
            sa.String(),
            nullable=True,
            comment="Nom du point de prélèvement associé",
        ),
        sa.Column(
            "remarque_fonctionnement_point_de_prelevement",
            sa.String(),
            nullable=True,
            comment="Remarque sur le fonctionnement du point de prélèvement",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_prelevement_releve_last_snapshot_date_created"
        ),
        "prelevement_releve_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_prelevement_releve_last_snapshot_id_dossier"
        ),
        "prelevement_releve_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "releve_index_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "ligne",
            sa.Integer(),
            nullable=True,
            comment="Ordre dans lequel l’index a été déclaré pour une même déclaration",
        ),
        sa.Column("date_releve_index", sa.DateTime(), nullable=True),
        sa.Column("releve_index", sa.Float(), nullable=True),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_releve_index_last_snapshot_date_created"
        ),
        "releve_index_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_releve_index_last_snapshot_id_dossier"
        ),
        "releve_index_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "volumes_pompes_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "id_dossier",
            sa.Integer(),
            nullable=True,
            comment="Identifiant unique du dossier.",
        ),
        sa.Column(
            "ligne",
            sa.Integer(),
            nullable=True,
            comment="Ordre dans lequel l’index a été déclaré pour une même déclaration",
        ),
        sa.Column(
            "point_prelevement_camion_citerne",
            sa.String(),
            nullable=True,
            comment="Point de prélèvement pour le camion citerne",
        ),
        sa.Column(
            "annee_prelevement_camion_citerne_2",
            sa.Integer(),
            nullable=True,
            comment="Année à laquelle le volume prélevé est associé (pour les prélèvements antérieurs à 2024, on accepte un chiffre globalisé à l’année)",
        ),
        sa.Column(
            "volumes_pompes_camions_citernes",
            sa.Float(),
            nullable=True,
            comment="Volumes pompés par les camions citernes (en m³), pour les déclarants ayant voulu déclarer leurs données une à une",
        ),
        sa.Column(
            "date_prelevement_camion_citerne",
            sa.DateTime(),
            nullable=True,
            comment="Date précise de prélèvement par camion citerne",
        ),
        sa.Column(
            "demarche_data_brute_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["demarche_data_brute_id"],
            [
                "demarches_simplifiees_last_snapshot.demarche_data_brute_last_snapshot.id"
            ],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_volumes_pompes_last_snapshot_date_created"
        ),
        "volumes_pompes_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_volumes_pompes_last_snapshot_id_dossier"
        ),
        "volumes_pompes_last_snapshot",
        ["id_dossier"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "avis_assoc_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("avis_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["avis_id"],
            ["demarches_simplifiees_last_snapshot.avis_last_snapshot.id"],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint("id", "avis_id", "piece_jointe_id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_avis_assoc_last_snapshot_date_created"
        ),
        "avis_assoc_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "dossier_fichier_tableau_suivi_camion_citerne_assoc_ls",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("dossier_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["dossier_id"],
            ["demarches_simplifiees_last_snapshot.dossier_last_snapshot.id"],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint("id", "dossier_id", "piece_jointe_id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_dossier_fichier_tableau_suivi_camion_citerne_assoc_ls_date_created"
        ),
        "dossier_fichier_tableau_suivi_camion_citerne_assoc_ls",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "extraits_de_registres_assoc_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "extrait_de_registre_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["extrait_de_registre_id"],
            [
                "demarches_simplifiees_last_snapshot.extrait_de_registre_last_snapshot.id"
            ],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint("id", "extrait_de_registre_id", "piece_jointe_id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extraits_de_registres_assoc_last_snapshot_date_created"
        ),
        "extraits_de_registres_assoc_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "fichiers_autres_documents_assoc_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "donnees_point_de_prelevement_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
        ),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["donnees_point_de_prelevement_id"],
            [
                "demarches_simplifiees_last_snapshot.donnees_point_de_prelevement_last_snapshot.id"
            ],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint(
            "id", "donnees_point_de_prelevement_id", "piece_jointe_id"
        ),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_fichiers_autres_documents_assoc_last_snapshot_date_created"
        ),
        "fichiers_autres_documents_assoc_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "fichiers_tableurs_assoc_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column(
            "donnees_point_de_prelevement_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
        ),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["donnees_point_de_prelevement_id"],
            [
                "demarches_simplifiees_last_snapshot.donnees_point_de_prelevement_last_snapshot.id"
            ],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint(
            "id", "donnees_point_de_prelevement_id", "piece_jointe_id"
        ),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_fichiers_tableurs_assoc_last_snapshot_date_created"
        ),
        "fichiers_tableurs_assoc_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_table(
        "message_assoc_last_snapshot",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("message_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "piece_jointe_id",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="La clé primaire de la piece jointe",
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["demarches_simplifiees_last_snapshot.message_last_snapshot.id"],
        ),
        sa.ForeignKeyConstraint(
            ["piece_jointe_id"],
            ["demarches_simplifiees_last_snapshot.piece_jointe_last_snapshot.id"],
        ),
        sa.PrimaryKeyConstraint("id", "message_id", "piece_jointe_id"),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.create_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_message_assoc_last_snapshot_date_created"
        ),
        "message_assoc_last_snapshot",
        ["date_created"],
        unique=False,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.alter_column(
        "avis",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(op.f("ix_avis_id_dossier"), "avis", ["id_dossier"], unique=False)
    op.alter_column(
        "citerne_releve",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_citerne_releve_id_dossier"),
        "citerne_releve",
        ["id_dossier"],
        unique=False,
    )
    op.create_index(
        op.f("ix_demarche_data_brute_id"), "demarche_data_brute", ["id"], unique=False
    )
    op.alter_column(
        "donnees_point_de_prelevement",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_donnees_point_de_prelevement_id_dossier"),
        "donnees_point_de_prelevement",
        ["id_dossier"],
        unique=False,
    )
    op.add_column(
        "dossier",
        sa.Column(
            "prelevement_points_autorises_aot_2023",
            sa.Boolean(),
            nullable=True,
            comment="Avez-vous prélevé sur au moins un des points autorisés par votre AOT durant l'année 2023 ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "rappel_obligation_mensuelle_declaration",
            sa.Boolean(),
            nullable=True,
            comment="Souhaiteriez-vous recevoir le 1er de chaque mois un mail vous rappelant l'obligation mensuelle de déclaration ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "acceptation_contact_deal",
            sa.Boolean(),
            nullable=True,
            comment="Accepteriez-vous d’être recontacté.e par la DEAL pour échanger davantage sur le sujet ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "mois_prelevement_camion_citerne",
            sa.String(),
            nullable=True,
            comment="En quel mois les prélèvements que vous allez déclarer ont-ils été réalisés ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "note_facilite_utilisation",
            sa.String(),
            nullable=True,
            comment="Donnez une note sur la facilité de prise en main de l’outil démarches simplifiées",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "remarque_note",
            sa.String(),
            nullable=True,
            comment="Souhaitez-vous apporter une remarque à cette note ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "temps_remplissage_questionnaire",
            sa.String(),
            nullable=True,
            comment="Combien de temps avez-vous passé à remplir ce questionnaire ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "amelioration_temps_remplissage",
            sa.String(),
            nullable=True,
            comment="Avez-vous une idée ce que qui pourrait être amélioré pour réduire ce temps ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "temps_formatage_donnees",
            sa.String(),
            nullable=True,
            comment="Combien de temps avez-vous passé au formatage des données (utilisation du modèle de tableur imposé) ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "televersement_tableur_brutes",
            sa.String(),
            nullable=True,
            comment="Qui est la personne qui a téléversé le tableur de données brutes dans l’outil Démarches Simplifiées ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "acces_formulaire",
            sa.String(),
            nullable=True,
            comment="Comment cette personne a-t-elle eu accès au formulaire ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "declarant_demarche_simplifiee",
            sa.String(),
            nullable=True,
            comment="Qui est la personne qui a fait la déclaration sur Démarches Simplifiées ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "raison_non_declaration_preleveur",
            sa.String(),
            nullable=True,
            comment="Pour quelles raisons la personne en charge du prélèvement n'a-t-elle pas pu faire la déclaration elle-même ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "demande_documentation",
            sa.String(),
            nullable=True,
            comment="Souhaiteriez-vous disposer d’une documentation sur le remplissage de ce formulaire et la façon de remplir le modèle de tableau de données ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "amelioration_documentation",
            sa.String(),
            nullable=True,
            comment="Sous quelle forme une documentation d’utilisation vous semble la plus utile ?",
        ),
    )
    op.add_column(
        "dossier",
        sa.Column(
            "suggestion_informations_visualisation",
            sa.String(),
            nullable=True,
            comment="Si vous le souhaitez, vous pouvez nous faire part des informations que vous aimeriez voir figurer dans cet outil de visualisation de données, et qui pourraient vous être utiles pour mieux suivre vos prélèvements au fil du temps.",
        ),
    )
    op.alter_column(
        "extrait_de_registre",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_extrait_de_registre_id_dossier"),
        "extrait_de_registre",
        ["id_dossier"],
        unique=False,
    )
    op.alter_column(
        "message",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_message_id_dossier"), "message", ["id_dossier"], unique=False
    )
    op.alter_column(
        "prelevement_releve",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_prelevement_releve_id_dossier"),
        "prelevement_releve",
        ["id_dossier"],
        unique=False,
    )
    op.alter_column(
        "releve_index",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_releve_index_id_dossier"), "releve_index", ["id_dossier"], unique=False
    )
    op.alter_column(
        "volumes_pompes",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier.",
        existing_comment="Identifiant unique du dossier",
        existing_nullable=True,
    )
    op.create_index(
        op.f("ix_volumes_pompes_id_dossier"),
        "volumes_pompes",
        ["id_dossier"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_volumes_pompes_id_dossier"), table_name="volumes_pompes")
    op.alter_column(
        "volumes_pompes",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_releve_index_id_dossier"), table_name="releve_index")
    op.alter_column(
        "releve_index",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(
        op.f("ix_prelevement_releve_id_dossier"), table_name="prelevement_releve"
    )
    op.alter_column(
        "prelevement_releve",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_message_id_dossier"), table_name="message")
    op.alter_column(
        "message",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(
        op.f("ix_extrait_de_registre_id_dossier"), table_name="extrait_de_registre"
    )
    op.alter_column(
        "extrait_de_registre",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_column("dossier", "suggestion_informations_visualisation")
    op.drop_column("dossier", "amelioration_documentation")
    op.drop_column("dossier", "demande_documentation")
    op.drop_column("dossier", "raison_non_declaration_preleveur")
    op.drop_column("dossier", "declarant_demarche_simplifiee")
    op.drop_column("dossier", "acces_formulaire")
    op.drop_column("dossier", "televersement_tableur_brutes")
    op.drop_column("dossier", "temps_formatage_donnees")
    op.drop_column("dossier", "amelioration_temps_remplissage")
    op.drop_column("dossier", "temps_remplissage_questionnaire")
    op.drop_column("dossier", "remarque_note")
    op.drop_column("dossier", "note_facilite_utilisation")
    op.drop_column("dossier", "mois_prelevement_camion_citerne")
    op.drop_column("dossier", "acceptation_contact_deal")
    op.drop_column("dossier", "rappel_obligation_mensuelle_declaration")
    op.drop_column("dossier", "prelevement_points_autorises_aot_2023")
    op.drop_index(
        op.f("ix_donnees_point_de_prelevement_id_dossier"),
        table_name="donnees_point_de_prelevement",
    )
    op.alter_column(
        "donnees_point_de_prelevement",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_demarche_data_brute_id"), table_name="demarche_data_brute")
    op.drop_index(op.f("ix_citerne_releve_id_dossier"), table_name="citerne_releve")
    op.alter_column(
        "citerne_releve",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_avis_id_dossier"), table_name="avis")
    op.alter_column(
        "avis",
        "id_dossier",
        existing_type=sa.INTEGER(),
        comment="Identifiant unique du dossier",
        existing_comment="Identifiant unique du dossier.",
        existing_nullable=True,
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_message_assoc_last_snapshot_date_created"
        ),
        table_name="message_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "message_assoc_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_fichiers_tableurs_assoc_last_snapshot_date_created"
        ),
        table_name="fichiers_tableurs_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "fichiers_tableurs_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_fichiers_autres_documents_assoc_last_snapshot_date_created"
        ),
        table_name="fichiers_autres_documents_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "fichiers_autres_documents_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extraits_de_registres_assoc_last_snapshot_date_created"
        ),
        table_name="extraits_de_registres_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "extraits_de_registres_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_dossier_fichier_tableau_suivi_camion_citerne_assoc_ls_date_created"
        ),
        table_name="dossier_fichier_tableau_suivi_camion_citerne_assoc_ls",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "dossier_fichier_tableau_suivi_camion_citerne_assoc_ls",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_avis_assoc_last_snapshot_date_created"
        ),
        table_name="avis_assoc_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "avis_assoc_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_volumes_pompes_last_snapshot_id_dossier"
        ),
        table_name="volumes_pompes_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_volumes_pompes_last_snapshot_date_created"
        ),
        table_name="volumes_pompes_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "volumes_pompes_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_releve_index_last_snapshot_id_dossier"
        ),
        table_name="releve_index_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_releve_index_last_snapshot_date_created"
        ),
        table_name="releve_index_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "releve_index_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_prelevement_releve_last_snapshot_id_dossier"
        ),
        table_name="prelevement_releve_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_prelevement_releve_last_snapshot_date_created"
        ),
        table_name="prelevement_releve_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "prelevement_releve_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f("ix_demarches_simplifiees_last_snapshot_message_last_snapshot_id_dossier"),
        table_name="message_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_message_last_snapshot_date_created"
        ),
        table_name="message_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table("message_last_snapshot", schema="demarches_simplifiees_last_snapshot")
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extrait_de_registre_last_snapshot_id_dossier"
        ),
        table_name="extrait_de_registre_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_extrait_de_registre_last_snapshot_date_created"
        ),
        table_name="extrait_de_registre_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "extrait_de_registre_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f("ix_demarches_simplifiees_last_snapshot_dossier_last_snapshot_id_dossier"),
        table_name="dossier_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_dossier_last_snapshot_date_created"
        ),
        table_name="dossier_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table("dossier_last_snapshot", schema="demarches_simplifiees_last_snapshot")
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_donnees_point_de_prelevement_last_snapshot_id_dossier"
        ),
        table_name="donnees_point_de_prelevement_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_donnees_point_de_prelevement_last_snapshot_date_created"
        ),
        table_name="donnees_point_de_prelevement_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "donnees_point_de_prelevement_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_citerne_releve_last_snapshot_date_created"
        ),
        table_name="citerne_releve_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_citerne_releve_last_snapshot_id_dossier"
        ),
        table_name="citerne_releve_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "citerne_releve_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f("ix_demarches_simplifiees_last_snapshot_avis_last_snapshot_date_created"),
        table_name="avis_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f("ix_demarches_simplifiees_last_snapshot_avis_last_snapshot_id_dossier"),
        table_name="avis_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table("avis_last_snapshot", schema="demarches_simplifiees_last_snapshot")
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_piece_jointe_last_snapshot_date_created"
        ),
        table_name="piece_jointe_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "piece_jointe_last_snapshot", schema="demarches_simplifiees_last_snapshot"
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_demarche_data_brute_last_snapshot_date_created"
        ),
        table_name="demarche_data_brute_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_index(
        op.f(
            "ix_demarches_simplifiees_last_snapshot_demarche_data_brute_last_snapshot_id"
        ),
        table_name="demarche_data_brute_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_table(
        "demarche_data_brute_last_snapshot",
        schema="demarches_simplifiees_last_snapshot",
    )
    # ### end Alembic commands ###
