"""empty message

Revision ID: 47951e564f1b
Revises: 
Create Date: 2024-05-19 22:38:30.912438

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '47951e564f1b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('demarche_data_brute',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('hashed_collected_data', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('demarche_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path'),
    sa.UniqueConstraint('hashed_collected_data')
    )
    op.create_index(op.f('ix_demarche_data_brute_date_created'), 'demarche_data_brute', ['date_created'], unique=False)
    op.create_table('donnees_point_de_prelevement',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('id_dossier', sa.Integer(), nullable=True),
    sa.Column('demarche_data_brute_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ligne', sa.Integer(), nullable=True),
    sa.Column('nom_point_prelevement', sa.String(), nullable=True),
    sa.Column('fichier_tableur', sa.String(), nullable=True),
    sa.Column('fichier_autre_document', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['demarche_data_brute_id'], ['demarche_data_brute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donnees_point_de_prelevement_date_created'), 'donnees_point_de_prelevement', ['date_created'], unique=False)
    op.create_table('dossier',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('id_dossier', sa.Integer(), nullable=True),
    sa.Column('adresse_email_connexion', sa.String(), nullable=True),
    sa.Column('civilite_declarant', sa.String(), nullable=True),
    sa.Column('nom_declarant', sa.String(), nullable=True),
    sa.Column('prenom_declarant', sa.String(), nullable=True),
    sa.Column('depot_pour_mandataire', sa.Boolean(), nullable=True),
    sa.Column('nom_mandataire', sa.String(), nullable=True),
    sa.Column('prenom_mandataire', sa.String(), nullable=True),
    sa.Column('archive', sa.Boolean(), nullable=True),
    sa.Column('etat_dossier', sa.String(), nullable=True),
    sa.Column('derniere_mise_a_jour', sa.DateTime(), nullable=True),
    sa.Column('date_depot', sa.DateTime(), nullable=True),
    sa.Column('date_passage_instruction', sa.DateTime(), nullable=True),
    sa.Column('date_traitement', sa.DateTime(), nullable=True),
    sa.Column('motivation_decision', sa.String(), nullable=True),
    sa.Column('instructeurs', sa.String(), nullable=True),
    sa.Column('groupe_instructeur', sa.String(), nullable=True),
    sa.Column('coordonnees', sa.String(), nullable=True),
    sa.Column('adresse_email_declarant', sa.String(), nullable=True),
    sa.Column('numero_telephone', sa.String(), nullable=True),
    sa.Column('statut_declarant', sa.String(), nullable=True),
    sa.Column('raison_sociale_structure', sa.String(), nullable=True),
    sa.Column('type_prelevement', sa.String(), nullable=True),
    sa.Column('point_prelevement_eau', sa.String(), nullable=True),
    sa.Column('numero_arrete_aot', sa.String(), nullable=True),
    sa.Column('prelevement_citerne', sa.String(), nullable=True),
    sa.Column('volume_preleve', sa.String(), nullable=True),
    sa.Column('mode_transmission_donnees_camion_citerne', sa.String(), nullable=True),
    sa.Column('volumes_pompes_jour', sa.String(), nullable=True),
    sa.Column('copie_registre_papier', sa.String(), nullable=True),
    sa.Column('conclusion', sa.String(), nullable=True),
    sa.Column('commentaire', sa.String(), nullable=True),
    sa.Column('volumes_annuels_pompes', sa.String(), nullable=True),
    sa.Column('transmission_extrait_numerique_registre', sa.String(), nullable=True),
    sa.Column('declaration_point_prelevement', sa.String(), nullable=True),
    sa.Column('date_activation_point_prelevement', sa.String(), nullable=True),
    sa.Column('type_autre_prelevement', sa.String(), nullable=True),
    sa.Column('releve_index_compteur', sa.String(), nullable=True),
    sa.Column('informations_compteur', sa.String(), nullable=True),
    sa.Column('numero_serie_compteur', sa.String(), nullable=True),
    sa.Column('prelevement_icpe', sa.String(), nullable=True),
    sa.Column('donnees_standardisees', sa.String(), nullable=True),
    sa.Column('prelevement_aep_zre', sa.String(), nullable=True),
    sa.Column('nom_point_prelevement', sa.String(), nullable=True),
    sa.Column('validation_informations', sa.Boolean(), nullable=True),
    sa.Column('details_prelevements_camion_citerne', sa.Boolean(), nullable=True),
    sa.Column('donnees_compteur_volumetrique', sa.Boolean(), nullable=True),
    sa.Column('compteur_lecture_directe', sa.Boolean(), nullable=True),
    sa.Column('panne_compteur', sa.Boolean(), nullable=True),
    sa.Column('prelevement_sur_periode_aot_agricole', sa.Boolean(), nullable=True),
    sa.Column('prelevement_sur_periode_camion_citerne', sa.Boolean(), nullable=True),
    sa.Column('date_debut_periode_declaree', sa.DateTime(), nullable=True),
    sa.Column('date_fin_periode_declaree', sa.DateTime(), nullable=True),
    sa.Column('annee_prelevement_camion_citerne', sa.Integer(), nullable=True),
    sa.Column('demarche_data_brute_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['demarche_data_brute_id'], ['demarche_data_brute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dossier_date_created'), 'dossier', ['date_created'], unique=False)
    op.create_index(op.f('ix_dossier_id_dossier'), 'dossier', ['id_dossier'], unique=False)
    op.create_table('extrait_de_registre',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('id_dossier', sa.Integer(), nullable=True),
    sa.Column('demarche_data_brute_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ligne', sa.Integer(), nullable=True),
    sa.Column('extrait_registre_papier', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['demarche_data_brute_id'], ['demarche_data_brute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extrait_de_registre_date_created'), 'extrait_de_registre', ['date_created'], unique=False)
    op.create_table('releve_index',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('ligne', sa.Integer(), nullable=True),
    sa.Column('date_releve_index', sa.DateTime(), nullable=True),
    sa.Column('releve_index', sa.Float(), nullable=True),
    sa.Column('id_dossier', sa.Integer(), nullable=True),
    sa.Column('demarche_data_brute_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['demarche_data_brute_id'], ['demarche_data_brute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_releve_index_date_created'), 'releve_index', ['date_created'], unique=False)
    op.create_table('volumes_pompes',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('id_dossier', sa.Integer(), nullable=True),
    sa.Column('demarche_data_brute_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ligne', sa.Integer(), nullable=True),
    sa.Column('point_prelevement_camion_citerne', sa.String(), nullable=True),
    sa.Column('annee_prelevement_camion_citerne_2', sa.Integer(), nullable=True),
    sa.Column('volumes_pompes_camions_citernes', sa.Float(), nullable=True),
    sa.Column('date_prelevement_camion_citerne', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['demarche_data_brute_id'], ['demarche_data_brute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_volumes_pompes_date_created'), 'volumes_pompes', ['date_created'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_volumes_pompes_date_created'), table_name='volumes_pompes')
    op.drop_table('volumes_pompes')
    op.drop_index(op.f('ix_releve_index_date_created'), table_name='releve_index')
    op.drop_table('releve_index')
    op.drop_index(op.f('ix_extrait_de_registre_date_created'), table_name='extrait_de_registre')
    op.drop_table('extrait_de_registre')
    op.drop_index(op.f('ix_dossier_id_dossier'), table_name='dossier')
    op.drop_index(op.f('ix_dossier_date_created'), table_name='dossier')
    op.drop_table('dossier')
    op.drop_index(op.f('ix_donnees_point_de_prelevement_date_created'), table_name='donnees_point_de_prelevement')
    op.drop_table('donnees_point_de_prelevement')
    op.drop_index(op.f('ix_demarche_data_brute_date_created'), table_name='demarche_data_brute')
    op.drop_table('demarche_data_brute')
    # ### end Alembic commands ###
