"""empty message

Revision ID: d35ec545c72b
Revises: 46bce3f2f1e2
Create Date: 2024-08-15 11:58:21.201757

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d35ec545c72b"
down_revision: Union[str, None] = "46bce3f2f1e2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "prelevement_releve",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date et Heure du relevé",
        existing_comment="Date du relevé",
        existing_nullable=True,
    )
    op.drop_column("prelevement_releve", "heure")
    op.alter_column(
        "prelevement_releve_last_snapshot",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date et Heure du relevé",
        existing_comment="Date du relevé",
        existing_nullable=True,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.drop_column(
        "prelevement_releve_last_snapshot",
        "heure",
        schema="demarches_simplifiees_last_snapshot",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "prelevement_releve_last_snapshot",
        sa.Column(
            "heure",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
            comment="Heure du relevé",
        ),
        schema="demarches_simplifiees_last_snapshot",
    )
    op.alter_column(
        "prelevement_releve_last_snapshot",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date du relevé",
        existing_comment="Date et Heure du relevé",
        existing_nullable=True,
        schema="demarches_simplifiees_last_snapshot",
    )
    op.add_column(
        "prelevement_releve",
        sa.Column(
            "heure",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
            comment="Heure du relevé",
        ),
    )
    op.alter_column(
        "prelevement_releve",
        "date",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date du relevé",
        existing_comment="Date et Heure du relevé",
        existing_nullable=True,
    )
    # ### end Alembic commands ###
